/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bankadvanceddb;


import com.mysql.jdbc.StringUtils;
import java.awt.FontFormatException;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import javax.swing.*;
import java.awt.Font;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.BufferedInputStream;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.sql.PreparedStatement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Random;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Anton
 */
public class AdminWindow extends javax.swing.JFrame {
   static final String DB_URL = "";    //SEIT DB SERVERI
   static final String DB_LOGIN = "";   //SEIT DATU BAZES LOGINU
   static final String DB_PASS = "";  //SEIT DATU BAzES PASS
   
   
   private int selectedUsId = -1;
   private int zinID = 0;
   
   private boolean alrPressReg = false;
   private boolean alrPressNKont = false;
   private boolean alrPressBackToLogin = false;
   
   private boolean[] statesArray = new boolean[7];
   private boolean[] changedField = new boolean[7];
   private String[] tempField = new String[7];
    /**
     * Creates new form AdminWindow
     */
    public AdminWindow() {
        initComponents();
        initUsersinList();
        tableInit();
        
        
        UEMNorekTable.addMouseListener( new MouseAdapter()
        {
            @Override
            public void mousePressed(MouseEvent e)
            {
                if ( SwingUtilities.isRightMouseButton(e) )
                {
                    JList list = (JList)e.getSource();
                    int row = list.locationToIndex(e.getPoint());
                    list.setSelectedIndex(row);
                }
            }

    });
    }
    
    
    //FONTS
    private static Font ttfBase = null;
    private static Font telegraficoFont = null;
    private static InputStream myStream = null;
    private static final String FONT_PATH_TELEGRAFICO = "cp.TTF";
    public void createFont() {


            try {
                myStream = new BufferedInputStream(
                        new FileInputStream(FONT_PATH_TELEGRAFICO));
                ttfBase = Font.createFont(Font.TRUETYPE_FONT, myStream);
                telegraficoFont = ttfBase.deriveFont(Font.PLAIN, 24);               
            } catch (Exception ex) {
                ex.printStackTrace();
                System.err.println("Font not loaded.");
            }
            
            jLabel1.setFont(telegraficoFont);
    }
    
    
    
    
    public AdminWindow(int i){
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminWindow().setVisible(true);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        krKMenu = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        userOptions = new javax.swing.JPopupMenu();
        deleteUserMI = new javax.swing.JMenuItem();
        OPUserMI = new javax.swing.JMenuItem();
        iesnPopupMenu = new javax.swing.JPopupMenu();
        apst = new javax.swing.JMenuItem();
        atc = new javax.swing.JMenuItem();
        norekMenu = new javax.swing.JPopupMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        parskMenu = new javax.swing.JPopupMenu();
        jAtcelt = new javax.swing.JMenuItem();
        jApstiprinat = new javax.swing.JMenuItem();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        UserList = new javax.swing.JList<>();
        LabelBankUsersList = new javax.swing.JLabel();
        rfrButt = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        kAktivi = new javax.swing.JTextField();
        kParadi = new javax.swing.JTextField();
        kLietSk = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        kLines = new javax.swing.JTextField();
        Kreditlinijas = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        usRegisterButt = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        UEPerson = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        UEMKredTable = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        UEMNorekTable = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        edit1 = new javax.swing.JButton();
        edit2 = new javax.swing.JButton();
        edit3 = new javax.swing.JButton();
        edit4 = new javax.swing.JButton();
        edit5 = new javax.swing.JButton();
        save1 = new javax.swing.JButton();
        save2 = new javax.swing.JButton();
        save3 = new javax.swing.JButton();
        save4 = new javax.swing.JButton();
        save5 = new javax.swing.JButton();
        updateButt = new javax.swing.JButton();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        edit6 = new javax.swing.JButton();
        edit7 = new javax.swing.JButton();
        save6 = new javax.swing.JButton();
        save7 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        curUser = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();

        jMenuItem1.setText("Dzest");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        krKMenu.add(jMenuItem1);

        jMenuItem2.setText("Labot");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        krKMenu.add(jMenuItem2);

        deleteUserMI.setText("Delete");
        deleteUserMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteUserMIActionPerformed(evt);
            }
        });
        userOptions.add(deleteUserMI);

        OPUserMI.setText("Open User Menu");
        OPUserMI.setToolTipText("");
        userOptions.add(OPUserMI);

        apst.setText("Aptsiprinat");
        apst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apstActionPerformed(evt);
            }
        });
        iesnPopupMenu.add(apst);

        atc.setText("Atcelt");
        atc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atcActionPerformed(evt);
            }
        });
        iesnPopupMenu.add(atc);

        jMenuItem3.setText("Delete");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        norekMenu.add(jMenuItem3);

        jMenuItem4.setText("Edit");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        norekMenu.add(jMenuItem4);

        jAtcelt.setText("Apstiprinat");
        jAtcelt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAtceltActionPerformed(evt);
            }
        });
        parskMenu.add(jAtcelt);

        jApstiprinat.setText("Atcelt");
        jApstiprinat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jApstiprinatActionPerformed(evt);
            }
        });
        parskMenu.add(jApstiprinat);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, java.awt.Color.darkGray));

        UserList.setComponentPopupMenu(userOptions);
        UserList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UserListMouseClicked(evt);
            }
        });
        UserList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                UserListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(UserList);

        LabelBankUsersList.setText("Bank Users");

        rfrButt.setText("Refresh");
        rfrButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rfrButtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(309, 309, 309))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(rfrButt, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(LabelBankUsersList))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LabelBankUsersList)
                    .addComponent(rfrButt, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(113, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("UserMenu", jPanel1);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, null));

        jTable1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Jaunu kontu iesniegumi", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12))); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Liet. ID", "Iesneguma ID(unique)", "Konta tips)", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setComponentPopupMenu(iesnPopupMenu);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Lietotaja ID", "Parskaitijuma ID (iesniegums)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setComponentPopupMenu(parskMenu);
        jScrollPane5.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(248, 248, 248))
        );

        jTabbedPane1.addTab("Iesniegumi", jPanel3);

        jPanel6.setBorder(new javax.swing.border.MatteBorder(null));

        jLabel4.setText("Kopejie aktivi");

        jLabel5.setText("Kopejie paradi");

        jLabel6.setText("Lietotaju skaits");

        kAktivi.setEditable(false);
        kAktivi.setText("0");

        kParadi.setEditable(false);
        kParadi.setText("0");

        kLietSk.setEditable(false);
        kLietSk.setText("0");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel8.setText("Statistika");

        kLines.setEditable(false);
        kLines.setText("0");

        Kreditlinijas.setText("KreditLinijas");

        jLabel7.setText("Iedoto kreditu summa");

        jLabel9.setText("Naudu summa visos kontos");

        jLabel10.setText("summa, kuru lietotajiem jaatdod bankai kopuma");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(0, 239, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(153, 153, 153))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(Kreditlinijas))
                .addGap(27, 27, 27)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(kLines, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                    .addComponent(kLietSk)
                    .addComponent(kAktivi)
                    .addComponent(kParadi))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addGap(24, 24, 24)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kAktivi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(kParadi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(kLietSk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kLines, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Kreditlinijas)
                    .addComponent(jLabel7))
                .addContainerGap(199, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Statistika", jPanel4);

        jLabel1.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 1, 24)); // NOI18N
        jLabel1.setText("Hello, ADMIN");
        jLabel1.setToolTipText("");

        usRegisterButt.setText("Register New User");
        usRegisterButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usRegisterButtActionPerformed(evt);
            }
        });

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 255), null), "UserEditing Menu", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        UEMKredTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kredit konta numurs", "Kreditlinija", "Kreditlinijas alikums", "Procenti"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        UEMKredTable.setComponentPopupMenu(krKMenu);
        jScrollPane3.setViewportView(UEMKredTable);

        UEMNorekTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Noreķinu konta numurs", "atlikums"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        UEMNorekTable.setComponentPopupMenu(norekMenu);
        jScrollPane4.setViewportView(UEMNorekTable);

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(153, 153, 153)));

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        edit1.setText("Edit");
        edit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit1ActionPerformed(evt);
            }
        });

        edit2.setText("Edit");
        edit2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit2ActionPerformed(evt);
            }
        });

        edit3.setText("Edit");
        edit3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit3ActionPerformed(evt);
            }
        });

        edit4.setText("Edit");
        edit4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit4ActionPerformed(evt);
            }
        });

        edit5.setText("Edit");
        edit5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit5ActionPerformed(evt);
            }
        });

        save1.setText("Save");
        save1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save1ActionPerformed(evt);
            }
        });

        save2.setText("Save");
        save2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save2ActionPerformed(evt);
            }
        });

        save3.setText("Save");
        save3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save3ActionPerformed(evt);
            }
        });

        save4.setText("Save");
        save4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save4ActionPerformed(evt);
            }
        });

        save5.setText("Save");
        save5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save5ActionPerformed(evt);
            }
        });

        updateButt.setText("Update");
        updateButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtActionPerformed(evt);
            }
        });

        edit6.setText("Edit");
        edit6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit6ActionPerformed(evt);
            }
        });

        edit7.setText("Edit");
        edit7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit7ActionPerformed(evt);
            }
        });

        save6.setText("Save");
        save6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save6ActionPerformed(evt);
            }
        });

        save7.setText("Save");
        save7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save7ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ainazi", "Aizkraukle", "Aizpute", "Akniste", "Aloja", "Ape", "Auce", "Baldone", "Balozi", "Balvi", "Bauska", "Broceni", "Cesis", "Cesvaine", "Dagda", "Daugavpils", "Dobele", "Durbe", "Grobina", "Gulbene", "Ikskile", "Ilukste", "Jaunjelgava", "Jekabpils", "Jelgava", "Jurmala", "Kandava", "Karsava", "Kegums", "Kraslava", "Kuldiga", "Lielvarde", "Liepaja", "Ligatne", "Limbazi", "Livani", "Lubāna", "Ludza", "Madona", "Mazsalaca", "Ogre", "Olaine", "Pavilosta", "Piltene", "Plavinas", "Preili", "Priekule", "Rezekne", "Riga", "Rujiena", "Sabile", "Salacgriva", "Salaspils", "Saldus", "Saulkrasti", "Seda", "Sigulda", "Skrunda", "Smiltene", "Staicele", "Stende", "Strenci", "Subate", "Talsi", "Tukums", "Valdemarpils", "Valka", "Valmiera", "Vangazi", "Varaklani", "Ventspils", "Viesite", "Vilaka", "Vilani", "Zilupe" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(0, 26, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField7))
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(edit4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(save4))
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(edit5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(save5))
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(edit6, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(save6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(edit7, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(save7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(edit2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(save2))
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(edit1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(save1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(edit3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(save3)))
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(updateButt, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(107, 107, 107))))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edit1)
                    .addComponent(save1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edit2)
                    .addComponent(save2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edit3)
                    .addComponent(save3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edit4)
                    .addComponent(save4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edit5)
                    .addComponent(save5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edit6)
                    .addComponent(save6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edit7)
                    .addComponent(save7))
                .addGap(43, 43, 43)
                .addComponent(updateButt, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        curUser.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel2.setText("Kredit konti");

        jLabel3.setText("Noreķinu konti");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(jLabel3)))
                .addGap(29, 29, 29)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addComponent(jLabel2))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(UEPerson)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(curUser, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(UEPerson)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(curUser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13))
        );

        jButton8.setText("Jauns konts");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(usRegisterButt, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(106, 106, 106))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(48, 48, 48))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(usRegisterButt, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(1, 1, 1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(87, 87, 87))
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("UserMenu");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void UserListInit(){
        
       
    
        
            try{
        
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection con = DriverManager.getConnection(DB_URL,DB_LOGIN, DB_PASS);
                    
                    Statement st = con.createStatement();
                    
                    ResultSet rs = st.executeQuery("SELECT * from Users");
                    
                    DefaultListModel model = new DefaultListModel();
                    while(rs.next()){

                       model.addElement(rs.getString("userFirstname") + "     ID" +rs.getInt("id"));
                    }
                    UserList.setModel(model);

                    //CLEANING
                    rs.close();
                    st.close();
                    con.close();
                    
                    }catch(SQLException se){
                       se.printStackTrace();
                    }catch(Exception s){
                        s.printStackTrace();
                    }finally{
                        //FIN
                    }
        
    
    }
    
    private void initUsersinList(){
        try{
            
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection con = DriverManager.getConnection(DB_URL,DB_LOGIN, DB_PASS);
                    
                    Statement st = con.createStatement();
                    
                    ResultSet rs = st.executeQuery("SELECT * from Users");
                    
                    DefaultListModel model = new DefaultListModel();
                    while(rs.next()){

                       model.addElement("ID: " + rs.getInt("id") + " " + rs.getString("userFirstname") );
                    }
                    UserList.setModel(model);
                     
                    
                    //CLEANING
                    rs.close();
                    st.close();
                    con.close();
                    
                    }catch(SQLException se){
                       se.printStackTrace();
                    }catch(Exception s){
                        s.printStackTrace();
                    }finally{
                        //FIN
                    }
    }
    
    
    
    private void usRegisterButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usRegisterButtActionPerformed
        RegisterForm rg = new RegisterForm(1,this);
        this.setVisible(false);
    }//GEN-LAST:event_usRegisterButtActionPerformed

    
    //BACKBUTT
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
        LoginScreen lg = new LoginScreen();
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    
    //EDIT KONTS
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection(DB_URL,DB_LOGIN, DB_PASS);
            int row = UEMKredTable.getSelectedRow();
            String knum = (UEMKredTable.getModel().getValueAt(row, 2).toString());
            PreparedStatement st = con.prepareStatement("DELETE FROM KredKonti where kNum = " + knum);
            if(UEMKredTable.getSelectedRow() < 0){
                JOptionPane.showMessageDialog(null, "Izvelejieties kontu");
                
            }else{
               
                float krAtl = Float.parseFloat(UEMKredTable.getModel().getValueAt(row, 2).toString());
                float kr = Float.parseFloat(UEMKredTable.getModel().getValueAt(row, 1).toString());
                System.out.print(kr + "<-lr " + krAtl + " <-krAtlk");
            
                if(     (kr - krAtl) != 0         ){
                    JOptionPane.showMessageDialog(this, "Ši konta ir kredits");
                }else{
                    JOptionPane.showMessageDialog(this, "Dzešana pekrita");
                    st.executeUpdate();
                } 
            }
            
            
            
            
        }catch(SQLException ex){
            ex.printStackTrace();
            
        }catch(Exception n){
            n.printStackTrace();
        }finally{
            
        }
                
        
        
        
        
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void deleteUserMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteUserMIActionPerformed
        //IZVELETAJA USERA ID NOTEIKSANA
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection(DB_URL,DB_LOGIN, DB_PASS);
            Statement st = c.createStatement();
            ResultSet rs = st.executeQuery("SELECT * from Users where userFirstname='"+ UserList.getSelectedValue().toString() + "'");
            while(rs.next()){
                selectedUsId = rs.getInt("id");
                System.out.println("WGHILE");
            }
            
            
            rs.close();
            st.close();
            c.close();
            
        }catch(SQLException ex){
            ex.printStackTrace();
        }catch(Exception e){
            e.printStackTrace();
        }finally{
            
        }
        
        
        //ZINOJUMU KONTOLLERIS
        if(irAiznemts(selectedUsId)){
            JOptionPane.showMessageDialog(null, "Lietotajam ir nesamaksati krediti, dzesana atcelta");
        }else{
            if(getSumOfAllKonts(selectedUsId) == 0.0f){
                JOptionPane.showMessageDialog(null, "Dzešana apstiprinata");
                deleteUser(selectedUsId);
            }
            else{
                int n = JOptionPane.showConfirmDialog(this," Tiesam gribat nodzests lietotaju ar naudu, kuru kopeja summa ir:  " + getSumOfAllKonts(selectedUsId), "Ja",JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if(n == JOptionPane.YES_OPTION)
                {
                    JOptionPane.showMessageDialog(null, "Lietotaja tika nodzests ");
                    deleteUser(selectedUsId);
                }
                else
                {
                     JOptionPane.showMessageDialog(null, "Dzesana atcelta ");
                }
                
            }
        }
        
            
         
         
           
    
    }//GEN-LAST:event_deleteUserMIActionPerformed

    private void deleteUser(int id){
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection(DB_URL,DB_LOGIN, DB_PASS);
            
            PreparedStatement st = c.prepareStatement("DELETE FROM Users,Kredkonti,NorekKonti WHERE id= " + id);
            st.executeUpdate();
           
            JOptionPane.showMessageDialog(this," Lietotajs ar kontiem tika nodzests", "Zinojums", JOptionPane.OK_CANCEL_OPTION);
            
            
        }catch(SQLException ex){
            ex.printStackTrace();
            
        }catch(Exception e){
            e.printStackTrace();
            
            
        }finally{
            
        }
        
    }
    
    private void iesnInit(){
        
        
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection(DB_URL,DB_LOGIN, DB_PASS);
            Statement st = c.createStatement();
            ResultSet rs = st.executeQuery("SELECT * from Iesn");
            
            DefaultTableModel tb = (DefaultTableModel) jTable1.getModel();
            tb.setRowCount(0);
            String tips = "";
            
            while(rs.next()){
                if(rs.getInt("tips") == 1) tips = "Noreķinu konts";
                else if(rs.getInt("tips") == 2) tips = "Kreditu konts";
                tb.addRow(new Object[] {rs.getInt("id"),rs.getString("iesnId"), rs.getInt("tips"), tips});  
            }
            
            rs.close();
            
            DefaultTableModel tb1 = (DefaultTableModel) jTable2.getModel();
            tb.setRowCount(0);
            ResultSet rs1 = st.executeQuery("SELECT * from Parskaitijumi");
            while(rs1.next()){
                tb.addRow(new Object[] {rs1.getInt("id"), rs1.getString("iesnId")});
                
                
            }
            rs1.close();
            st.close();
            c.close();
            
            
            
        }catch(SQLException se){
            se.printStackTrace();
        }catch(Exception e){
            e.printStackTrace();
        }finally{
            
        }
        
        
        
        
    }
    
    private void tableInit(){
        try{
            DefaultTableModel tb = (DefaultTableModel) UEMKredTable.getModel();
            DefaultTableModel tb1 = (DefaultTableModel) UEMKredTable.getModel();
            String str = "";
            tb.setRowCount(0);
            tb1.setRowCount(0);
            //setROW NULL
            
            
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection(DB_URL,DB_LOGIN, DB_PASS);
            Statement st = c.createStatement();
            
            //prasing userlist line
            try{
              str = UserList.getSelectedValue().toString();  
            }catch(Exception e){
                
            }
            
            if(str.isEmpty()){
                tb.setRowCount(0);
                tb1.setRowCount(0);
                
            }else{
                String[] splitStr = str.split("\\s+");
                System.out.println(splitStr[0] + " " + splitStr[1] + " -  SPLITED");
                ResultSet rs = st.executeQuery("SELECT * from KredKonti where id='"+ splitStr[1] + "'");
                
                try{
                    selectedUsId  = Integer.parseInt(splitStr[1]);
                }catch(Exception e){
                    selectedUsId = -1;
                }
                
                
                System.out.println("selected id: " + selectedUsId);
                curUser.setText(splitStr[2]);
                initEditMenu(selectedUsId);
                //KREDITTABLE
           
                tb.setRowCount(0);
                tb1.setRowCount(0);
                while(rs.next()){
                    System.out.println("solis - >");
                    tb.addRow(new Object[]{rs.getString("kNum"), rs.getFloat("kr"),rs.getFloat("krAtlikums"), rs.getFloat("procenti")});
                }  
                rs.close();
            
                //NOREKKONT TABLE
                ResultSet rs1 = st.executeQuery("SELECT * from NorekKonti where id='" + splitStr[1] +"'");
                DefaultTableModel tb2 = (DefaultTableModel) UEMNorekTable.getModel();
                tb2.setRowCount(0);
                while(rs1.next()){
                
                    tb2.addRow(new Object[]{rs1.getString("kNum"), rs1.getFloat("atlikums")});
                }
                rs1.close();
            
                st.close();
                c.close();
            
                JOptionPane.showMessageDialog(this," Konti tika inicializeti", "Zinojums", JOptionPane.OK_CANCEL_OPTION);
            }
            
            
        }catch(SQLException se){
            se.printStackTrace();
        }catch(Exception s){
            s.printStackTrace();
        }finally{
        //  
        }
    }
    
    private void initStats(){
        int countUs = 0;
        
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection(DB_URL,DB_LOGIN, DB_PASS);
            Statement st = c.createStatement();
            
            ResultSet rs = st.executeQuery("SELECT Count(*) from Users");
            rs.next();
            countUs = rs.getInt("Count(*)");
            kLietSk.setText(Integer.toString(countUs));
            rs.close();
            
            ResultSet rs1 = st.executeQuery("SELECT * from KredKonti");
            float sumOfKred = 0;
            while(rs1.next()){
                if(  rs1.getFloat("kr") - rs1.getFloat("krAtlikums") > 0.0            ){
                    sumOfKred += (rs1.getFloat("kr") - rs1.getFloat("krAtlikums"));
                }
            }
            kParadi.setText(Float.toString(sumOfKred));
            rs1.close();
            
            ResultSet rs2 = st.executeQuery("Select * from NorekKonti");
            float sumOfNor = 0;
            while(rs2.next()){
                sumOfNor += rs2.getFloat("atlikums");
    
            }
            kAktivi.setText(Float.toString(sumOfNor));
            
            ResultSet rs3 = st.executeQuery("SELECT * from KredKonti");
            float sumOfKr = 0;
            while(rs3.next()){
                
                sumOfKr += rs3.getFloat("kr");
                
                
            }
            kLines.setText(Float.toString(sumOfKr));

            st.close();
            c.close();
            
            
            
            
            
            
        }catch(SQLException sq){
            sq.printStackTrace();
            
        }catch(Exception e){
            e.printStackTrace();
        }finally{
            
        }
        
        
        
        
    }
    
    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void edit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit1ActionPerformed
        tempField[0] = jTextField1.getText();
        jTextField1.setEditable(true);
    }//GEN-LAST:event_edit1ActionPerformed

    private void edit2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit2ActionPerformed
        tempField[1] = jTextField2.getText();
        jTextField2.setEditable(true);
    }//GEN-LAST:event_edit2ActionPerformed

    private void edit3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit3ActionPerformed
        tempField[2] = jTextField3.getText();
        jTextField3.setEditable(true);
    }//GEN-LAST:event_edit3ActionPerformed

    private void edit4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit4ActionPerformed
        tempField[3] = jTextField4.getText();
        jTextField4.setEditable(true);
    }//GEN-LAST:event_edit4ActionPerformed

    private void edit5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit5ActionPerformed
        tempField[4] = jTextField4.getText();
        jTextField5.setEditable(true);
    }//GEN-LAST:event_edit5ActionPerformed

    private void save1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save1ActionPerformed
        if(isValidField(jTextField1.getText())){
            
            if(tempField[0].equals(jTextField1.getText())) changedField[0] = false;  //NESAMAINIJAS
            else changedField[0] = true;
            
            jTextField1.setEditable(false);
            System.out.println("DO INSERT 1");  
            statesArray[0] = true;
        }else 
            statesArray[0] = false;
    }//GEN-LAST:event_save1ActionPerformed

    private void save2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save2ActionPerformed
        if(isValidField(jTextField2.getText())){
            
            if(tempField[1].equals(jTextField2.getText())) changedField[1] = false;  //NESAMAINIJAS
            else changedField[1] = true;
            
            jTextField2.setEditable(false);
            System.out.println("DO INSERT 2"); 
            statesArray[1] = true;
        }else statesArray[1] = false;
    }//GEN-LAST:event_save2ActionPerformed

    private void edit6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit6ActionPerformed
        tempField[5] = jTextField6.getText();
        jTextField6.setEditable(true);
    }//GEN-LAST:event_edit6ActionPerformed

    private void edit7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit7ActionPerformed
        tempField[6] = jTextField6.getText();
        jTextField7.setEditable(true);
    }//GEN-LAST:event_edit7ActionPerformed

    private void save3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save3ActionPerformed
        if(jTextField3.getText().matches("[\\d]+")  &&  jTextField3.getText().length() == 4 && (Integer.parseInt(jTextField3.getText()) > 1900 )
                && (Integer.parseInt(jTextField3.getText()) <= 2018 )     ){
            
            if(tempField[2].equals(jTextField3.getText())) changedField[2] = false;  //NESAMAINIJAS
            else changedField[2] = true;
            
            jTextField3.setEditable(false);
            System.out.println("Do insert3");
            statesArray[2] = true;
            
        }else
            statesArray[2] = false;
    }//GEN-LAST:event_save3ActionPerformed

    private void save4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save4ActionPerformed
        if(jTextField4.getText().matches("[\\d]+")  &&  jTextField4.getText().length() == 2 && (Integer.parseInt(jTextField4.getText()) > 0 )
                && (Integer.parseInt(jTextField4.getText()) <= 12 )     ){
            
            if(tempField[3].equals(jTextField4.getText())) changedField[3] = false;  //NESAMAINIJAS
            else changedField[3] = true;
            
            jTextField4.setEditable(false);
            System.out.println("DO INSER 4");
            statesArray[3] = true;
        }else 
            statesArray[3] = false;
    }//GEN-LAST:event_save4ActionPerformed

    private void save5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save5ActionPerformed
        if(jTextField5.getText().matches("[\\d]+")  &&  jTextField5.getText().length() == 2 && (Integer.parseInt(jTextField5.getText()) > 0 )
                && (Integer.parseInt(jTextField5.getText()) <= 31 )     ){
            
            if(tempField[4].equals(jTextField5.getText())) changedField[4] = false;  //NESAMAINIJAS
            else changedField[4] = true;
            
            jTextField5.setEditable(false);
            System.out.println("DO INSERT 5");
            statesArray[4] = true;
        }else
            statesArray[4] = false;
    }//GEN-LAST:event_save5ActionPerformed

    private void updateButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtActionPerformed
        if( checkFieldsForInsert() ){
            
            
            int counter = 0;
            for(int i = 0; i < 7;i++){
                
                if(changedField[i] == false) counter += 1;

            if(counter == 7){
                JOptionPane.showMessageDialog(this,"Nekas nemainisies", "Zinojums", JOptionPane.OK_CANCEL_OPTION);
            }
            }
            try{
                Class.forName("com.mysql.jdbc.Driver");
                Connection c = DriverManager.getConnection(DB_URL,DB_LOGIN, DB_PASS);
               
                PreparedStatement st = c.prepareStatement("UPDATE Users SET userFirstName = ?, userLastname = ?, bDate = ?, pass = ?,city = ?, regDatums = ? WHERE id = ?");
                st.setString(1, jTextField1.getText());
                st.setString(2, jTextField2.getText());
                
                String bd = jTextField3.getText() + "-" + jTextField4.getText() + "-" + jTextField4.getText();
                System.out.println("BDAY FIR INSERT  " + bd);
                st.setString(3, bd);
                st.setString(4, jTextField6.getText());
                st.setString(5, jTextField7.getText());
                st.setString(6, jComboBox1.getItemAt(WIDTH));
                st.setString(7, Integer.toString(selectedUsId));
                System.out.println(jComboBox1.getItemAt(WIDTH) + "   ITEM" );
               st.executeUpdate();
                
                
                
            }catch(SQLException e){
                e.printStackTrace();
                
            }catch(Exception ex){
                ex.printStackTrace();
                
            }finally{
                //fin
            }
            
            
            System.out.println("inserting");
            }else{
            JOptionPane.showMessageDialog(this, "Nekorekti ievaditi dati edit menu");
        }
               
    }//GEN-LAST:event_updateButtActionPerformed

    private void save6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save6ActionPerformed
        if((jTextField6.getText().length() > 7) || (jTextField6.getText().length() < 19)){
            
            if(tempField[5].equals(jTextField6.getText())) changedField[5] = false;  //NESAMAINIJAS
            else changedField[5] = true;
            
            jTextField6.setEditable(true);
            statesArray[5] = true;
            System.out.print("DO INSERT 6");
        }else{
            jTextField6.setEditable(false);
            statesArray[5] = false;
        }
    }//GEN-LAST:event_save6ActionPerformed

    private void save7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save7ActionPerformed
        if(checkRegDat(jTextField7.getText())){
            
            if(tempField[6].equals(jTextField7.getText())) changedField[6] = false;  //NESAMAINIJAS
            else changedField[6] = true;
            
            jTextField7.setEditable(false);
            statesArray[6] = true;
        }else{
            statesArray[6] = false;
        }
    }//GEN-LAST:event_save7ActionPerformed

    private void apstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apstActionPerformed
        
        
        int row = jTable1.getSelectedRow();
        int value = (int) jTable1.getModel().getValueAt(row, 0);
        
        System.out.println("MAIN TEST " + value);
        
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection(DB_URL,DB_LOGIN, DB_PASS);
            Statement st = c.createStatement();
            
            String table = "";
            System.out.println((int) jTable1.getModel().getValueAt(row, 2) + " VALUE for TABLE IDENT");
            switch((int) jTable1.getModel().getValueAt(row, 2))
            {
                case 1:
                    table = "NorekKonti";
                    Random rd = new Random();
                    String kNum = Integer.toString((rd.nextInt(899)+100))   +  Integer.toString(rd.nextInt(899)+100) + Integer.toString(rd.nextInt(899)+100) + Integer.toString(rd.nextInt(899)+100) + Integer.toString(rd.nextInt(10));
                    System.out.println(kNum);
                    String sql = "INSERT INTO " + table + " " + "(id,kNum,atlikums)" + " VALUES(" + value + ", '" + kNum + "', " + 0 + ")" ;
                    st.executeUpdate(sql);
                break;
                    
                case 2:table = "KredKonti";
                    Random rdd = new Random();
                    String kNum1 = Integer.toString((rdd.nextInt(899)+100))   +  Integer.toString(rdd.nextInt(899)+100) + Integer.toString(rdd.nextInt(899)+100) + Integer.toString(rdd.nextInt(899)+100) + Integer.toString(rdd.nextInt(10));
                    System.out.println(kNum1);
                    String sql1 = "INSERT INTO " + table + " " + "(id,kNum,kr,krAtlikums,procenti)" + " VALUES(" + value + ", '" + kNum1 + "', " + 0 + ", " + 0 + ", " + 0  + ")" ;
                    st.executeUpdate(sql1);
                    break;
                
            }
            
            
            
            
            
            st.close();
            c.close();
            
        }catch(SQLException ex){
            ex.printStackTrace();
        }catch(Exception e){
            e.printStackTrace();
            
        }finally{
            
        }
        
        //System.out.println(idd);
        //JAUNA KONTE LETITAJAM BY ID
        iesnInit();
    }//GEN-LAST:event_apstActionPerformed

    private void atcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atcActionPerformed
        
        //ATCELSANA
        int row = jTable1.getSelectedRow();
        int value = (int) jTable1.getModel().getValueAt(row, 0);
        String iesnId = (String)jTable1.getModel().getValueAt(row, 1);
        System.out.println(iesnId);
        
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection(DB_URL,DB_LOGIN, DB_PASS);
            
           
            PreparedStatement st = c.prepareStatement("DELETE FROM Iesn where id = " + value + " AND iesnId = " + iesnId);
            st.executeUpdate();
            
            st.close();
            c.close();
            
            
        }catch(SQLException ex){
            ex.printStackTrace();
        }catch(Exception e){
            e.printStackTrace();
        }finally{
            
        }
       
        iesnInit();
    }//GEN-LAST:event_atcActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        
        
        int id = -1;
        String str = "-1";
        try{
             str = UserList.getSelectedValue().toString();
        }catch(Exception e ){
        
        }
        System.out.println(str + " PRINTET STR BEFORE START");
        if(str == "-1"){
            JOptionPane.showMessageDialog(this,"Nav izvelets lietotajs", "Kluda", JOptionPane.ERROR_MESSAGE);
        }else{
            
            String[] splitStr = str.split("\\s+");
            System.out.println(splitStr[0] + " " + splitStr[1] + "    SPLITES CHECK NEW KONT");
        
            id = Integer.parseInt(splitStr[1]);
            if(id < 0){
                JOptionPane.showMessageDialog(this," Lietotaja id netika inicializets,izvelejaties no saraksta", "Kluda", JOptionPane.ERROR_MESSAGE);
            }else{
                NewKontWindow nk = new NewKontWindow(1,this, "s");
                this.setVisible(false);
            }
        }
        
        
        
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        
                
                int row = UEMKredTable.getSelectedRow();
                String kTemp = UEMKredTable.getModel().getValueAt(row, 0).toString();
                float kline = Float.parseFloat(UEMKredTable.getModel().getValueAt(row, 1).toString());
                float atlikums = Float.parseFloat(UEMKredTable.getModel().getValueAt(row, 2).toString());
                float proc = Float.parseFloat(UEMKredTable.getModel().getValueAt(row, 3).toString());
                
                KredKEdit editKont = new KredKEdit(kTemp, kline,atlikums,proc,"Kredits");
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        
        int row = UEMNorekTable.getSelectedRow();
        String kn = (String)UEMNorekTable.getModel().getValueAt(row, 0);
        float atlk = Float.parseFloat(UEMNorekTable.getModel().getValueAt(row, 1).toString());
        System.out.println("ATLKL : " + atlk);
        NorKontWindow nr = new NorKontWindow(kn,atlk,"Norekont");
        
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        
        int row = UEMNorekTable.getSelectedRow();
        String kn = (String)UEMNorekTable.getModel().getValueAt(row, 0);
        float at = Float.parseFloat(UEMNorekTable.getModel().getValueAt(row, 1).toString());
        if(at > 0){
                int n = JOptionPane.showConfirmDialog(this," Tiesam gribat nodzests kontu ar atlikumu  " , "Ja",JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if(n == JOptionPane.YES_OPTION)
                {
                    
                    try{
                        Class.forName("com.mysql.jdbc.Driver");
                        Connection c = DriverManager.getConnection(DB_URL,DB_LOGIN, DB_PASS);
            
           
                        PreparedStatement st = c.prepareStatement("DELETE FROM NorekKonti where kNum = '" + kn + "'" );
                        st.executeUpdate();
            
            
                        st.close();
                        c.close();
                    }catch(SQLException ex){
                        ex.printStackTrace();
                    }catch(Exception e){
                        e.printStackTrace();
                    }finally{
            
                    } 
                    
                    
                    JOptionPane.showMessageDialog(this, "Konts tika nodzests ");
                    
                }
                else
                {
                     JOptionPane.showMessageDialog(this, "Dzesana atcelta ");
                }
                
                
        }
                
        else{
           try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection(DB_URL,DB_LOGIN, DB_PASS);
            
           
            PreparedStatement st = c.prepareStatement("DELETE FROM NorekKonti WHERE kNum = " + "'" + kn + "'" );
            st.executeUpdate();
            
            
            st.close();
            c.close();
            
            
            }catch(SQLException ex){
             ex.printStackTrace();
            }catch(Exception e){
                e.printStackTrace();
            }finally{
            
            } 
        }
        
        
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    
    //TABLE 2 MENU@
    private void jAtceltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAtceltActionPerformed
        int row = jTable1.getSelectedRow();
        String value = (String) jTable1.getModel().getValueAt(row, 1);
        
        
        
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection(DB_URL,DB_LOGIN, DB_PASS);
            Statement st = c.createStatement();
            
            String sql = "Delete * from Parskaitijumi WHERE iesnId=" + " '" + value +"'";
            st.executeUpdate(sql);
   
             st.close();
             c.close();
            
        }catch(SQLException ex){
            ex.printStackTrace();
            
        }catch(Exception e){
            e.printStackTrace();
        }finally{
            
        }
    }//GEN-LAST:event_jAtceltActionPerformed

    private void jApstiprinatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jApstiprinatActionPerformed
        int row = jTable1.getSelectedRow();
        String value = (String) jTable1.getModel().getValueAt(row, 1);
        
        
        
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection(DB_URL,DB_LOGIN, DB_PASS);
            Statement st = c.createStatement();
            
            String sql = "Delete * from Parskaitijumi WHERE iesnId=" + " '" + value +"'";
            st.executeUpdate(sql);
            
            //   DOPARSKAITIJUMS LIETOTAJAM()     procedure VAI F-JA
                 
             st.close();
             c.close();
            
        }catch(SQLException ex){
            ex.printStackTrace();
            
        }catch(Exception e){
            e.printStackTrace();
        }finally{
            
        }
   
        
        
    }//GEN-LAST:event_jApstiprinatActionPerformed

//MAIN SELECTABLE PANEL CONTROLLER
    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged

        //MAIN SELECTABLE PANEL CONTROLLER

        switch(jTabbedPane1.getSelectedIndex())
        {
            case 0:
            System.out.println(jTabbedPane1.getSelectedIndex());
            break;
            case 1:
            iesnInit();
            break;
            case 2:
            System.out.println(jTabbedPane1.getSelectedIndex());
            initStats();
            break;
            case 3:
            System.out.println(jTabbedPane1.getSelectedIndex());
            break;
            case 4:
            System.out.println(jTabbedPane1.getSelectedIndex());
            break;

        }

    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int d = jTable1.getSelectedRow();
        System.out.println("s R = " + d);
    }//GEN-LAST:event_jTable1MouseClicked

    private void rfrButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rfrButtActionPerformed

        selectedUsId = -1;
        initUsersinList();
        initEditMenu(selectedUsId);

    }//GEN-LAST:event_rfrButtActionPerformed

    private void UserListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_UserListValueChanged
        System.out.println("VALUE CH");
        tableInit();
        

    }//GEN-LAST:event_UserListValueChanged

    private void UserListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UserListMouseClicked
        System.out.println(UserList.getSelectedValue().toString());
        String nameTemp = UserList.getSelectedValue().toString(); //pusto   <<<<<<<<<<<<<---
        try{

            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection(DB_URL,DB_LOGIN, DB_PASS);

            Statement st = con.createStatement();

            ResultSet rs = st.executeQuery("SELECT * from Users where userFirstName = '" + nameTemp + "'");

            if(rs.next())
            UEPerson.setText(rs.getString("userLastname"));

            //CLEANING
            rs.close();
            st.close();
            con.close();

        }catch(SQLException se){
            se.printStackTrace();
        }catch(Exception s){
            s.printStackTrace();
        }finally{
            //FIN
        }

    }//GEN-LAST:event_UserListMouseClicked

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    
    private boolean checkFieldsForInsert(){
        for(int i = 0; i<7;i++){
            
            if(statesArray[i] == false){
                
                System.out.println("kkas ir naperaizi " + i);
                return false;
                
            }
            
        }
        System.out.println("VISS IR PAREIZI");
        return true;
        
    }
    
    
    //FOR STRS with words
    private boolean isValidField(String str){
        
        if(str.length() < 4 || !str.matches("^\\D*$")){
            System.out.println(" KLUDA JABUT VISMAZ 4 SIMB ");
            
            return false;
        }else{
            System.out.println("K LUDU NAV ");
            return true;   
        }
        
    }
    
    
    private boolean irAiznemts(int id){
        
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection(DB_URL,DB_LOGIN, DB_PASS);
            Statement st = c.createStatement();
            ResultSet rs = st.executeQuery(" SELECT * from KredKonti where id = " + id);
            
            while(rs.next() ){
                rs.getFloat("kr");
                rs.getFloat("krAtlikums");
                if(rs.getFloat("kr") - rs.getFloat("krAtlikums") > 0){
                    rs.close();
                    st.close();
                    c.close();
                    return true;
                }
            }
            
            rs.close();
            st.close();
            c.close();
            return false;
            
            
        }catch(SQLException ex){
            ex.printStackTrace();
        }catch(Exception e){
            e.printStackTrace();
            
        }finally{
            
        }
        return true;
    }
    
    
    private float getSumOfAllKonts(int id){
        float sum = 0.0f;
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection(DB_URL,DB_LOGIN, DB_PASS);
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("SELECT * from NorekKonti where id=" + id);
            
            while (rs.next()){
                sum += rs.getFloat("atlikums");
            }
            
            return sum;  
            
        }catch(SQLException ex){
            ex.printStackTrace();
            
        }catch(Exception e){
            e.printStackTrace();
        }finally{
            
        }
        
        return 0.0f; 
    }
    
    private void initEditMenu(int id){
        if(id < 0){
            //null to all fields
            jTextField1.setText("");
            jTextField2.setText("");
            jTextField3.setText("");
            jTextField4.setText("");
            jTextField5.setText("");
            jTextField6.setText("");
            jTextField7.setText("");
            
            
        }else{
           try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection(DB_URL,DB_LOGIN, DB_PASS);
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("SELECT * from Users where id='" + id + "'");
            System.out.println("ID for qerry  initeditmenu" + id);
            rs.next();
            
            jTextField1.setText(rs.getString("userFirstname"));
            jTextField1.setEditable(false);
            jTextField2.setText(rs.getString("userLastname"));
            jTextField2.setEditable(false);
            
            //DATE PARSING
            String birthDate = rs.getString("bDate");
            SimpleDateFormat s = new SimpleDateFormat("yyyy-MM-dd");
            Date date = s.parse(birthDate);
            Calendar cal = Calendar.getInstance();
            cal.setTime(date);
            
            //DATE PARSING END
            
            jTextField3.setText(Integer.toString(cal.get(Calendar.YEAR)));
            jTextField3.setEditable(false);
            
            if((cal.get(Calendar.MONTH) + 1 > 0)    &&    (cal.get(Calendar.MONTH)) + 1 < 10) jTextField4.setText("0" + Integer.toString(cal.get(Calendar.MONTH) + 1));
            else jTextField4.setText(Integer.toString(cal.get(Calendar.MONTH) + 1));
            
            jTextField4.setEditable(false);
            jTextField5.setText(Integer.toString(cal.get(Calendar.DAY_OF_MONTH)));
            jTextField5.setEditable(false);
            jTextField6.setText(rs.getString("pass"));
            jTextField6.setEditable(false);
            jTextField7.setText(rs.getString("regDatums"));
            jTextField7.setEditable(false);
            jComboBox1.setSelectedItem(rs.getString("city"));
            System.out.println();

            rs.close();
            st.close();
            con.close();
            
            //initializing states of tf with true, cuz db read
            for(int i = 0; i < 7;i++){
                statesArray[i] = true;
            }
            
            
        }catch(SQLException ex){
            ex.printStackTrace();
            
        }catch(Exception e){
            e.printStackTrace();
        }finally{
            
        } 
        }
        
        
        
        
        
        
    }
    
    private boolean checkRegDat(String str){
        try{
            
            
            SimpleDateFormat ss = new SimpleDateFormat("yyyy-MM-dd");
            Date regD = ss.parse(str);
            System.out.println(" prase success ");
            return true;
            
            
        }catch(Exception e){
            System.out.println("CHECK DAT PARSING KLYDA");
            return false;
        }
        
    }

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Kreditlinijas;
    private javax.swing.JLabel LabelBankUsersList;
    private javax.swing.JMenuItem OPUserMI;
    private javax.swing.JTable UEMKredTable;
    private javax.swing.JTable UEMNorekTable;
    private javax.swing.JLabel UEPerson;
    private javax.swing.JList<String> UserList;
    private javax.swing.JMenuItem apst;
    private javax.swing.JMenuItem atc;
    private javax.swing.JLabel curUser;
    private javax.swing.JMenuItem deleteUserMI;
    private javax.swing.JButton edit1;
    private javax.swing.JButton edit2;
    private javax.swing.JButton edit3;
    private javax.swing.JButton edit4;
    private javax.swing.JButton edit5;
    private javax.swing.JButton edit6;
    private javax.swing.JButton edit7;
    private javax.swing.JPopupMenu iesnPopupMenu;
    private javax.swing.JMenuItem jApstiprinat;
    private javax.swing.JMenuItem jAtcelt;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton8;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField kAktivi;
    private javax.swing.JTextField kLietSk;
    private javax.swing.JTextField kLines;
    private javax.swing.JTextField kParadi;
    private javax.swing.JPopupMenu krKMenu;
    private javax.swing.JPopupMenu norekMenu;
    private javax.swing.JPopupMenu parskMenu;
    private javax.swing.JButton rfrButt;
    private javax.swing.JButton save1;
    private javax.swing.JButton save2;
    private javax.swing.JButton save3;
    private javax.swing.JButton save4;
    private javax.swing.JButton save5;
    private javax.swing.JButton save6;
    private javax.swing.JButton save7;
    private javax.swing.JButton updateButt;
    private javax.swing.JButton usRegisterButt;
    private javax.swing.JPopupMenu userOptions;
    // End of variables declaration//GEN-END:variables
}
